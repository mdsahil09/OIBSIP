import java.util.ArrayList;
import java.util.Scanner;

class Passenger {
    private String name;
    private String trainNumber;
    private String trainName;
    private String classType;
    private String dateOfJourney;
    private String source;
    private String destination;
    private String pnr;

    public Passenger(String name, String trainNumber, String trainName, String classType, String dateOfJourney, String source, String destination) {
        this.name = name;
        this.trainNumber = trainNumber;
        this.trainName = trainName;
        this.classType = classType;
        this.dateOfJourney = dateOfJourney;
        this.source = source;
        this.destination = destination;
        this.pnr = generatePNR();
    }

    private String generatePNR() {
        // Logic to generate a unique PNR number
        // This can be more sophisticated in a real-world scenario
        return "PNR" + (int) (Math.random() * 10000);
    }

    public String getPNR() {
        return pnr;
    }

    @Override
    public String toString() {
        return "Passenger Name: " + name +
                "\nTrain Number: " + trainNumber +
                "\nTrain Name: " + trainName +
                "\nClass Type: " + classType +
                "\nDate of Journey: " + dateOfJourney +
                "\nSource: " + source +
                "\nDestination: " + destination +
                "\nPNR: " + pnr;
    }
}

class ReservationSystem {
    private ArrayList<Passenger> passengers = new ArrayList<>();
    private Scanner scanner = new Scanner(System.in);

    public void reserveTicket() {
        System.out.println("\n------ Reservation System ------");

        System.out.print("Enter Passenger Name: ");
        String name = scanner.nextLine();

        System.out.print("Enter Train Number: ");
        String trainNumber = scanner.nextLine();

        // Assume train name is fetched based on the train number in a real-world scenario
        String trainName = "Sample Train";

        System.out.print("Enter Class Type: ");
        String classType = scanner.nextLine();

        System.out.print("Enter Date of Journey: ");
        String dateOfJourney = scanner.nextLine();

        System.out.print("Enter Source: ");
        String source = scanner.nextLine();

        System.out.print("Enter Destination: ");
        String destination = scanner.nextLine();

        Passenger passenger = new Passenger(name, trainNumber, trainName, classType, dateOfJourney, source, destination);
        passengers.add(passenger);

        System.out.println("\nReservation Successful!");
        System.out.println(passenger);
    }

    public void cancelTicket() {
        System.out.println("\n------ Cancellation Form ------");

        System.out.print("Enter PNR Number for Cancellation: ");
        String pnrToCancel = scanner.nextLine();

        Passenger passengerToCancel = findPassengerByPNR(pnrToCancel);

        if (passengerToCancel != null) {
            System.out.println("\nCancellation Successful!");
            System.out.println(passengerToCancel);
            passengers.remove(passengerToCancel);
        } else {
            System.out.println("\nPassenger with PNR " + pnrToCancel + " not found.");
        }
    }

    private Passenger findPassengerByPNR(String pnr) {
        for (Passenger passenger : passengers) {
            if (passenger.getPNR().equals(pnr)) {
                return passenger;
            }
        }
        return null;
    }
}

public class OnlineReservationSystem {
    public static void main(String[] args) {
        ReservationSystem reservationSystem = new ReservationSystem();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\n------ Online Reservation System ------");
            System.out.println("1. Reserve Ticket");
            System.out.println("2. Cancel Ticket");
            System.out.println("3. Exit");

            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    reservationSystem.reserveTicket();
                    break;
                case 2:
                    reservationSystem.cancelTicket();
                    break;
                case 3:
                    System.out.println("Exiting Online Reservation System. Goodbye!");
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please enter a valid option.");
            }
        }
    }
}

